<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Marker Labels</title>
    <style>

      #article {
        height: 100%;
        width: 30%;
        float: left;
        background-color: white;
        overflow:scroll;
      }

      #map {
        height: 100%;
        width: 70%;
        float: right
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      #floating-panel {
        position: absolute;
        top: 10px;
        left: 50%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }

    </style>
  </head>
  <body>
    <div id="article">
    <h3 style="padding-left:5px">Search Results:</h3>
      <ol>
        <% res.each do |a| %>
          <li>
            <%="Title: #{a.english_title}"%>
              <ul>
                <li><%= "Turkish Title: #{a.turkish_title}"%></li>
                <% if a.other_title != nil %>
                <li><%= "#{a.language} Title: #{a.other_title}"%></li>
                <% end %>
                <li><%= "About Location: #{a.location.name}"%></li>
                <li><a href=<%=a.publication.url%>><%= "Publication: #{a.publication.publication_serie}" %></a></li>
                <li><%= "Pages: #{a.text_start_page} to #{a.text_end_page}"%></li>
              </ul>
              <br>
          </li>
        <% end %>
      </ol>
    </div>

    <div id="map" data-res="<%= res.to_json(:include => :location) %>"></div>

    <script>
      // In the following example, markers appear when the user clicks on the map.
      // Each marker is labeled with a single alphabetical character.
      // The markers are stored in an array.
      // The user can then click an option to hide, show or delete the markers.
      var map;
      var curr_location;
      var hash = new Object();
      var index = 1;
      var markers = [];
      var res = $('#map').data('res');

      function initMap() {
        var turkey = { lat: 38.9637, lng: 35.2433 };
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 6,
          center: turkey,
          mapTypeId: 'terrain'
        });

        for (i = 0; i < res.length; i++){
          var areas = res[i].location.coordinates.split("|");
          curr_location = res[i].location.name;

          if (typeof(hash[curr_location]) == 'undefined'){
            hash[curr_location] = new Array();
          }
          hash[curr_location].push(res[i].english_title);

          for (j = 0; j < areas.length; j++){
            var points = areas[j].split(";");
            var path = [];
            for (k = 0; k < points.length; k++){
              var latlng = points[k].split(",");
              // window.alert(latlng);
              var myLatLng = new google.maps.LatLng(Number(latlng[0]), Number(latlng[1]));
              path.push(myLatLng);
            }
            var polygon = new google.maps.Polygon({
              location: curr_location,
              paths: path,
              strokeColor: '#FF0000',
              strokeOpacity: 0.9,
              strokeWeight: 3,
              fillColor: '#FF0000',
              fillOpacity: 0.35
            });
            polygon.setMap(map);
            polygon.addListener('click', showInfo);
          }
          // window.alert(hash[curr_location]);
        }
      }

      function showInfo(event) {

        var loc = this.location;

        var contentString = '<b>Name of Area: ' + loc + '</b>';

        var articles = hash[loc];

        // window.alert(articles);

        for (var i = 0; i < articles.length; i++) {
          var article = articles[i];
          contentString += '<br>' + 'Articles ' + (i + 1) + ':<br>' + article;
        }

        var infoWindow = new google.maps.InfoWindow({
          content: contentString
        });

        // Replace the info window's content and position.
        // infoWindow.setContent(contentString);
        infoWindow.setPosition(event.latLng);

        infoWindow.open(map);
      }

      // Adds a marker to the map and push to the array.
      function addMarker(location) {
        // Add the marker at the clicked location, and add the next-available label
        // from the array of alphabetical characters.
        var marker = new google.maps.Marker({
          position: location,
          label: (index++).toString(),
          map: map
        });
        markers.push(marker);
      }

      // Sets the map on all markers in the array.
      function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(map);
        }
      }

      // Removes the markers from the map, but keeps them in the array.
      function clearMarkers() {
        setMapOnAll(null);
      }

      // Shows any markers currently in the array.
      function showMarkers() {
        setMapOnAll(map);
      }

      // Deletes all markers in the array by removing references to them.
      function deleteMarkers() {
        clearMarkers();
        markers = [];
        index = 1;
      }
    </script>
    <script async defer 
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQ91eX38i3gEsID0-4_OHWm-RKZeWsWjM&callback=initMap">
    </script>
  </body>
</html>