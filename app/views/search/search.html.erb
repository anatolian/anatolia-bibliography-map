<div id="content" style="background-image: url('/Turkey.jpg')">
  <div id="filter">
    <%= form_tag "/search", method: "get" do %>
      <div class="row">
        Filter by publication volume:</br>
        <% volumes.each do |volume| %>
        <%= check_box_tag "volume_ids[]", volume, false, :id => "volume_#{volume}" %> 
        <%= "#{volume}&nbsp;&nbsp;&nbsp;".html_safe %>
        <% end %>
      </div>
      <div class="row">
        Filter by publication number:</br>
        <% numbers.each do |number| %>
        <%= check_box_tag "number_ids[]", number, false, :id => "number_#{number}" %> 
        <%= "#{number}&nbsp;&nbsp;&nbsp;".html_safe %>
        <% end %>
      </div>
      <div class="row">
        <%= submit_tag "filter", name: "filter[#{keyword}]", class: 'btn btn-default btn-sm btn-info' %>
      </div>
    <% end %>
    <div class="row">
      <%= link_to "&nbsp;back to home page".html_safe, :controller => "publication_map", :style => "color:#030a4b;" %>
    </div>
  </div>
  <div id="articles">
    <% if keyword == "All Publications" %>
      <h1><%="&nbsp;#{keyword}:".html_safe %></h1>
    <% else %>  
      <h1><%="&nbsp;Search by keywords: #{keyword}".html_safe %></h1>
    <% end %>
    <% if vol_f != nil || num_f != nil %>
    <h4>
      <%="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Filtered by: ".html_safe %>
      <% if vol_f != nil%>
        <%="volume" %>
        <% vol_f.each_with_index do |vol, index| %>
        <%= "#{vol}" %>
        <% if index < vol_f.size - 1 %>
          ,
        <% end %>
        <% end %>
        <% if num_f != nil %>
          ;
        <% end %>
      <% end %>
      <% if num_f != nil %>
        <%="&nbsp;number".html_safe %>
        <% num_f.each_with_index do |num, index| %>
        <%= "#{num}" %>
        <% if index < num_f.size - 1 %>
          ,
        <% end %>
        <% end %>
      <% end %>
    </h4>
    <% end %>
    <h5><%="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;About #{size} results".html_safe %></h5>
  	<ul>
  	<% res.each do |a| %>
  	<li>
  		<%="Title: #{a.english_title}"%>
  		<ul>
  			<li><%= "Turkish Title: #{a.turkish_title}"%></li>
  	    <% if a.other_title != nil %>
  	      <li><%= "#{a.language} Title: #{a.other_title}"%></li>
  	    <% end %>
        <li><%= "About Location: #{a.location.name}" %></li>
  			<li><a href=<%=a.publication.url%>><%= "Publication: #{a.publication.publication_serie}, Volume: #{a.publication.volume}, Number: #{a.publication.number}"%></a></li>
  			<li><%= "Pages: #{a.text_start_page} - #{a.text_end_page}"%></li>
  		</ul>
  	</li>
  	<% end %>
  	</ul>
  </div>
  <div id="map" data-res="<%= res.to_json(:include => :location) %>"></div>
  <script>
      // In the following example, markers appear when the user clicks on the map.
      // Each marker is labeled with a single alphabetical character.
      // The markers are stored in an array.
      // The user can then click an option to hide, show or delete the markers.
      var map;
      var curr_location;
      var hash = new Object();
      var res = $('#map').data('res');

      function initMap() {
        var turkey = { lat: 38.9637, lng: 35.2433 };
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 6,
          center: turkey,
          mapTypeId: 'terrain'
        });

        for (i = 0; i < res.length; i++){
          var areas = res[i].location.coordinates.split("|");
          curr_location = res[i].location.name;

          if (typeof(hash[curr_location]) == 'undefined'){
            hash[curr_location] = new Array();
          }
          hash[curr_location].push(res[i].english_title);

          for (j = 0; j < areas.length; j++){
            var points = areas[j].split(";");
            var path = [];
            for (k = 0; k < points.length; k++){
              var latlng = points[k].split(",");
              // window.alert(latlng);
              var myLatLng = new google.maps.LatLng(Number(latlng[0]), Number(latlng[1]));
              path.push(myLatLng);
            }
            var polygon = new google.maps.Polygon({
              location: curr_location,
              paths: path,
              strokeColor: '#FF0000',
              strokeOpacity: 0.9,
              strokeWeight: 3,
              fillColor: '#FF0000',
              fillOpacity: 0.35
            });
            polygon.setMap(map);
            polygon.addListener('click', showInfo);
          }
          // window.alert(hash[curr_location]);
        }
      }

      function showInfo(event) {

        var loc = this.location;

        var contentString = '<b>Name of Area: ' + loc + '</b>';

        var articles = hash[loc];

        // window.alert(articles);

        for (var i = 0; i < articles.length; i++) {
          var article = articles[i];
          contentString += '<br>' + 'Articles ' + (i + 1) + ':<br>' + article;
        }

        var infoWindow = new google.maps.InfoWindow({
          content: contentString
        });

        // Replace the info window's content and position.
        // infoWindow.setContent(contentString);
        infoWindow.setPosition(event.latLng);

        infoWindow.open(map);
      }
      
  </script>
  <script async defer 
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQ91eX38i3gEsID0-4_OHWm-RKZeWsWjM&callback=initMap">
    </script>
  <footer>
    <p>&copy; UPenn MCIT 2016</p>
  </footer>
</div>